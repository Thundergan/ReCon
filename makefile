# Fetches the module name from the go.mod file.
MODULENAME=`grep -m 1 module go.mod | awk '{print $$2}'`

# The GO target operating system
ARCH="arm"

# The GO target architecture
OS="linux"

# Disables shared libraries (C-Go libraries) during the compile process.
CGO_ENABLED=0

# Bildvars used by the build process
BUILD_VAR=GOOS=$(OS) GOARCH=$(ARCH) CGO_ENABLED=$(CGO) GOARM=6

# The file containing the main function, the programm entry point
SRC=main.go

# The directory where the compiled executable is stored.
OUTDIR=build

# The directory where the test output is stored.
CODECOVDIR=coverage

# Your favorized browser (please enter the command to start it from terminal).
BROWSER=firefox

help: ## Prints this help. This is the default action.
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-34s\033[0m %s\n", $$1, $$2}'

run: ## Runs the code with go
	go run $(SRC)

info: ## Prints the config of the makefile
	@echo -e "\033[36mModulename:\t\t\033[0m $(MODULENAME)"
	@echo -e "\033[36mBuild Vars:\t\t\033[0m $(BUILD_VAR)"
	@echo -e "\033[36mMain file:\t\t\033[0m $(SRC)"
	@echo -e "\033[36mOutput folder:\t\t\033[0m $(OUTDIR)"
	@echo -e "\033[36mCodecoverage folder:\t\033[0m $(CODECOVDIR)"
	@echo -e "\033[36mInternetbrowser:\t\033[0m $(BROWSER)"

all: distclean generate test showcov bench build ## Makes tidy, regenerates the autogenerated files, runs the tests, shows the code coverage, runs the benchmarks and creates an executable file.

build: ## Creates an executable file.
	$(BUILD_VAR) go build --buildmode=exe -o $(OUTDIR)/$(shell basename $(CURDIR)) $(SRC)

tidy: ## Makes tidy.
	go mod tidy

test: ## Runs the tests, stores the results and generates the coverage file.
	if [ ! -d $(CODECOVDIR) ]; then mkdir -p $(CODECOVDIR); fi
	go test  -v -covermode=atomic -coverprofile=$(CODECOVDIR)/cover.out ./...
	go tool cover -html=$(CODECOVDIR)/cover.out -o $(CODECOVDIR)/coverage.html

bench: ##Runs the benchmark.
	go test -v -benchmem -bench ./...

showcov: test ## Runs the tests and opens the code coverage in the browser.
	$(BROWSER) ./$CODECOVDIR/coverage.html

clean: ## Cleans up the folderstructure.
	go clean
	rm -rf $(OUTDIR) $(CODECOVDIR)

distclean: clean ## Cleans the caches and the folderstructure, basically everithing that is not part of the original source distribution.
	go clean -cache -modcache -testcache -fuzzcache

diff: ## Shows the changes since the last commit.
	@git --no-pager diff --stat
